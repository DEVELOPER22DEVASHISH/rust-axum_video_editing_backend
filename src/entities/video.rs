//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::Serialize;


#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize)]
#[sea_orm(table_name = "video")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub original_name: String,
    pub file_path: String,
    #[sea_orm(column_type = "Double", nullable)]
    pub duration: Option<f64>,
    pub file_size: i64,
    pub status: String,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::subtitle::Entity")]
    Subtitle,
}

impl Related<super::subtitle::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Subtitle.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
