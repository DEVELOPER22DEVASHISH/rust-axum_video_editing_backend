//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "subtitle")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub video_id: i32,
    pub text: String,
    #[sea_orm(column_type = "Double")]
    pub start_time: f64,
    #[sea_orm(column_type = "Double")]
    pub end_time: f64,
    pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::video::Entity",
        from = "Column::VideoId",
        to = "super::video::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Video,
}

impl Related<super::video::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Video.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
